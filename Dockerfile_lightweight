# Use Python 3.12 slim base image
FROM python:3.12-slim

WORKDIR /app

# Install system dependencies for Tesseract, OCR, libpng, libjpeg
RUN apt-get update && apt-get install -y \
    tesseract-ocr libtesseract-dev libpng-dev libjpeg-dev zlib1g-dev \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

# Install uv
RUN pip install uv

# Set environment variables for caching models and OCR
ENV HF_HOME=/root/.cache/huggingface
ENV EASYOCR_MODULE_PATH=/root/.EasyOCR
ENV TORCH_HOME=/root/.cache/torch

RUN mkdir -p $HF_HOME $EASYOCR_MODULE_PATH $TORCH_HOME

# Copy dependency files to leverage Docker cache
COPY pyproject.toml ./

# Install CPU-only torch and torchvision
RUN pip install --no-cache-dir \
    torch==2.4.1+cpu torchvision==0.19.1+cpu \
    --index-url https://download.pytorch.org/whl/cpu

# Install dependencies from pyproject.toml, excluding docling
RUN uv pip install --system \
    fuzzywuzzy>=0.18.0 \
    gradio>=5.44.1 \
    hf-xet>=1.1.8 \
    langchain-core>=0.3.75 \
    langchain-google-genai>=2.1.10 \
    pillow>=11.3.0 \
    pymupdf>=1.26.4 \
    pytesseract>=0.3.13 \
    python-levenshtein>=0.27.1 \
    sentence-transformers>=5.1.0

# Install timm for potential model dependencies
RUN pip install timm
RUN pip install easyocr

# Pre-download required models
RUN python -c "\
from sentence_transformers import SentenceTransformer; \
import easyocr; \
SentenceTransformer('all-MiniLM-L6-v2'); \
reader = easyocr.Reader(['en'], gpu=False);"

# Copy the rest of the source code
COPY . .

# Set environment variables to avoid runtime downloads
ENV TRANSFORMERS_OFFLINE=1
ENV HF_DATASETS_OFFLINE=1

# Expose Gradio server port
EXPOSE 7860

# Optional Google API key environment variable
ENV GOOGLE_API_KEY=""

# Run the lightweight Gradio app
CMD ["python", "-m", "src.gradio_lightweight"]